directive @cacheControl(inheritMaxAge: Boolean, maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | INTERFACE | OBJECT | UNION

scalar AccountNumber

type AuthenticatedUser {
  accessToken: String!
  email: String!
}

scalar BigInt

scalar Byte

enum CacheControlScope {
  PRIVATE
  PUBLIC
}

scalar CountryCode

input CreateCategoryCustomInput {
  categoryDefaultId: ObjectID
  description: String!
  iconProperties: IconPropertiesInput!
  transactionGroupId: ObjectID!
  type: TransactionCategoryTypeEnum!
}

input CreateCategoryDefaultInput {
  description: String!
  iconProperties: IconPropertiesInput!
  type: TransactionCategoryTypeEnum!
}

input CreateTransactionGroupInput {
  description: String!
  iconProperties: IconPropertiesInput!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

scalar Currency

scalar Cursor

scalar DID

scalar Date

scalar DateTime

scalar Duration

scalar EmailAddress

scalar GUID

scalar HSL

scalar HSLA

scalar HexColorCode

scalar Hexadecimal

scalar IBAN

scalar IPv4

scalar IPv6

scalar ISBN

scalar ISO8601Duration

type IconProperties {
  background: String!
  color: String!
  icon: String!
}

input IconPropertiesInput {
  background: String!
  color: String!
  icon: String!
}

scalar JSON

scalar JSONObject

scalar JWT

scalar Latitude

scalar LocalDate

scalar LocalEndTime

scalar LocalTime

scalar Locale

scalar Long

scalar Longitude

scalar MAC

type Mutation {
  createCategory(input: CreateCategoryCustomInput!): TransactionCategory!
  createTransactionGroup(input: CreateTransactionGroupInput!): TransactionGroup!
  createUser(input: CreateUserInput!): Boolean!
  deleteCategory(_id: ObjectID!, groupId: ObjectID!): Boolean
  deleteTransactionGroup(_id: ObjectID!): Boolean!
  forgotPassword(email: String!): Boolean!
  loginWithCredentials(email: String!, password: String!): Boolean!
  now: BigInt
  resetPassword(password: String!, token: String!): Boolean!
  updateCategory(_id: ObjectID!, input: UpdateCustomInput!): TransactionCategory!
  updateTransactionGroup(_id: ObjectID!, input: UpdateTransactionGroupInput!): TransactionGroup!
}

scalar NegativeFloat

scalar NegativeInt

scalar NonEmptyString

scalar NonNegativeFloat

scalar NonNegativeInt

scalar NonPositiveFloat

scalar NonPositiveInt

scalar ObjectID

type ObjectKeyValue {
  key: String!
  value: String!
}

input ObjectKeyValueInput {
  key: String!
  value: String!
}

type PageInfo {
  cursor: Cursor
  hasNextPage: Boolean!
  totalCount: Int!
}

scalar PhoneNumber

scalar Port

scalar PositiveFloat

scalar PositiveInt

scalar PostalCode

type Query {
  categoriesByGroupId(transactionGroupId: ObjectID!): [TransactionCategory!]!
  categoryById(categoryId: ObjectID!): TransactionCategory
  now: BigInt
  transactionGroupById(_id: ObjectID): TransactionGroup
  viewer: Viewer
}

scalar RGB

scalar RGBA

scalar RoutingNumber

scalar SafeInt

scalar Time

scalar TimeZone

scalar Timestamp

type TransactionCategory {
  _id: ObjectID!
  description: String!
  iconProperties: IconProperties!
  isDefault: Boolean!
  type: TransactionCategoryTypeEnum!
}

enum TransactionCategoryTypeEnum {
  EARNINGS
  EXPENSES
}

type TransactionGroup {
  _id: ObjectID!
  description: String!
  iconProperties: IconProperties!
  owner: ObjectID!
}

scalar URL

scalar USCurrency

scalar UUID

scalar UnsignedFloat

scalar UnsignedInt

input UpdateCustomInput {
  categoryDefaultId: ObjectID
  description: String!
  iconProperties: IconPropertiesInput!
  transactionGroupId: ObjectID!
  type: TransactionCategoryTypeEnum!
}

input UpdateTransactionGroupInput {
  description: String!
  iconProperties: IconPropertiesInput!
}

scalar UtcOffset

type Viewer {
  _id: ObjectID!
  email: String!
  isAdmin: Boolean!
  name: String!
}

scalar Void